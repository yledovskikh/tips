#zip создание шифрованного архива
zip -r --encrypt  vmwvc16h01.group.s7.zip ./vmwvc16h01.group.s7

#journalctl управление информацией

journalctl --since "24 hours ago" -p crit
journalctl --since "2023-01-15" --until "2023-01-15 23:59:59"
journalctl -b
diff <(journalctl -b) <(journalctl -b -1)

journalctl --grep "ошибка"

#Проверить текущий размер журнала:
journalctl --disk-usage
#Удалить записи старше 7 дней:
journalctl --vacuum-time=7d
#
journalctl --vacuum-size=500M
#посмотреть
journalctl -k

#работа в selinux
#проверка статуса
sestatus
getenforce
cat /etc/selinux/config
# в режим Enforcing
setenforce 1
# в режим Permissive
setenforce 0
# просмотр контекста
ls -Z
ps -eZ

#Восстановление контекста файла по умолчанию:
restorecon -v /var/www/html/index.html
restorecon -R -v /var/www/html/


#Управление политиками SELinux
#Просмотр доступных политик:
 semanage permissive -l

#Показывает список модулей в режиме Permissive.
#Добавление политики в permissive-режим:
 semanage permissive -a httpd_t

#Удаление политики из permissive-режима:
 semanage permissive -d httpd_t

#Просмотр установленных модулей SELinux:
 semodule -l

#Установка нового модуля:
 semodule -i mymodule.pp

#Удаление модуля:
 semodule -r mymodule

#Основные команды apt
#Обновление списка пакетов:
sudo apt update
#Обновляет локальный кэш списка доступных пакетов.
#Обновление установленных пакетов:
sudo apt upgrade

#Устанавливает последние версии всех установленных пакетов, не удаляя существующие.
#Полное обновление системы:
sudo apt full-upgrade

#Устанавливает новые версии пакетов, включая удаление или установку дополнительных пакетов, если это необходимо.
#Очистка неиспользуемых пакетов:

sudo apt autoremove

#Удаляет пакеты, которые больше не требуются (например, зависимости от удаленных программ).
#Очистка кэша пакетов:

sudo apt clean

#Удаляет все кэшированные файлы пакетов из /var/cache/apt/archives.
#Установка и удаление пакетов
#Установка пакета:

sudo apt install <имя_пакета>

#Пример:

sudo apt install curl

#Удаление пакета:

sudo apt remove <имя_пакета>

#Пример:

  sudo apt remove curl

#Полное удаление пакета (включая конфигурационные файлы):
sudo apt purge <имя_пакета>
#Пример:
sudo apt purge nginx

#Установка конкретной версии пакета:
sudo apt install <имя_пакета>=<версия>
#Пример:
sudo apt install nginx=1.18.0-0ubuntu1

#Переустановка пакета:
sudo apt install --reinstall <имя_пакета>
#Информация о пакетах
#Поиск пакетов:

apt search <ключевое_слово>
apt search apache

#Просмотр информации о пакете:

apt show <имя_пакета>
apt show vim

#Просмотр установленных пакетов:

apt list --installed

#Проверка доступности обновлений для пакетов:
apt list --upgradable

#Работа с зависимостями
#Проверка зависимостей пакета:

apt depends <имя_пакета>
apt depends python3

#Просмотр пакетов, которые зависят от указанного:
apt rdepends <имя_пакета>
apt rdepends libc6

#пример использования jq
jq '.name' data.json

#{
#   "users": [
#     { "id": 1, "name": "Alice", "skills": ["Python", "Docker"] },
#     { "id": 2, "name": "Bob", "skills": ["Java", "Kubernetes"] }
#   ]
# }
jq '.users[].name' complex.json
jq '.users[] | select(.skills[] == "Python") | .name' complex.json

#пример использования find
find /path/to/search -name "file.txt"
find /path/to/search -iname "file.txt"
find /path/to/search -name "*.txt"
find /path/to/search -type d -name "backup"
find /path/to/search -type d
find /path/to/search -size +100M
find /path/to/search -size -1k
find /path/to/search -mtime -7
find /path/to/search -mtime 0
find /path/to/search -atime -2
find /path/to/search -type f
find /path/to/search -type l
find /path/to/search -type s
find /path/to/search -name "*.tmp" -type f -delete
find /path/to/search -name "*.txt" -exec cp {} /destination/path/ \;
find /path/to/search -type f -exec chmod 644 {} \;
find /path/to/search -name "*.log" -exec cat {} \;
find /path/to/search -perm 644
find /path/to/search -maxdepth 1 -name "*.txt"
find /path/to/search -name "*.txt" -mtime -7

# пример использования sed
sed 's/старый_текст/новый_текст/' файл.txt
sed 's/old/new/g' file.txt
# сохранить изменения
sed -i 's/error/warning/g' log.txt
sed -i.bak 's/error/warning/g' log.txt

#удаление строк
sed '/debug/d' file.txt
# удалить 5 строку
sed '5d' file.txt

#Замена текста с использованием регулярных выражений
sed 's/[0-9]/#/g' file.txt
sed 's/[^a-zA-Z]//g' file.txt

echo "Hello World" | sed 's/World/Universe/'

# удаление пустых строк, пробелы
sed '/^$/d' file.txt
sed '/^[[:space:]]*$/d' file.txt

#пример использования awk
awk '{print $1}' data.txt
awk '{print $2, $3}' data.txt
awk -F',' '{print $1, $3}' data.csv
awk '{print "Name:", $1, "- Age:", $2}' data.txt
awk '{sum += $1} END {print "Total:", sum}' numbers.txt
ps aux | awk '{print $1, $2, $11}'

#как определить процесс потреблящий больше всего RAM
ps aux --sort=-%mem | head -n 10
smem --sort=rss | tail -n 10
pmap -x PID

# Использование lsof
lsof /путь/к/файлу
lsof -p <PID>
lsof | grep '(deleted)'
lsof | awk '$9 ~ /\(deleted\)/ {print $0}'
lsof +L1

#поиск процессов в другом namespace
lsof -i -n -P
ip netns list
ip netns exec <namespace_name> ss -tuln
nsenter --target <PID> --net

# Использование fuser
fuser /путь/к/файлу
#кильнуть процессы которые используют файл
fuser -k /путь/к/файлу

#пример использования tcpdump
sudo tcpdump -i any host <внешний_IP>
sudo tcpdump -i eth0
sudo tcpdump -i eth0 host <внешний_IP>
sudo tcpdump -i eth0 src <внешний_IP>
sudo tcpdump -i eth0 port 80
sudo tcpdump -i eth0 -w capture.pcap

#показывать только основные загаловки и с большей детализацией
sudo tcpdump -i eth0 -v
sudo tcpdump -i eth0 -vv
sudo tcpdump -i eth0 -vvv

sudo tcpdump -i eth0 src 192.168.1.1 and dst port 80
